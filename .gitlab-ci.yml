stages:
  - prepare
  - test
  - get-trees
  - reports

workflow:
  auto_cancel:
    on_job_failure: none

variables:
  GIT_SUBMODULE_STRATEGY: none
  GIT_STRATEGY: fetch
  CI_TAG_NAME: ${DOCKER_REGISTRY}/phyloling/ci
  CI_IMAGE: ${CI_TAG_NAME}:${CI_COMMIT_SHA}
  DIND_IMAGE: docker:27-dind
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  VENV_DIR: "$CI_PROJECT_DIR/venv"

.commit-cache: &commit-cache
  key:
    files:
      - requirements.txt
      - ci.dockerfile
  paths:
    - $PIP_CACHE_DIR
    - $VENV_DIR
  policy: pull

default:
  image: ${CI_IMAGE}
  cache:
    <<: *commit-cache
  before_script:
    - git config --global credential.helper store
    - |
      git credential approve <<EOF
      protocol=https
      host=github.com
      username=${GITHUB_USER_NAME}
      password=${GITHUB_ACCESS_TOKEN}
      EOF

prepare:ci:
  stage: prepare
  image: ${DIND_IMAGE}
  resource_group: prepare
  before_script: []
  services:
    - name: ${DIND_IMAGE}
      command: [ "--registry-mirror", "https://registry-mirror.mama2.de" ]
  script:
    - export CI_MAIN_NAME=${CI_TAG_NAME}:main
    - export CI_BRANCH_NAME=${CI_TAG_NAME}:`echo ${CI_COMMIT_REF_NAME} | tr '/' '-'`
    - docker login ${DOCKER_REGISTRY} -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASSWORD}
    - docker login registry-mirror.mama2.de -u ${DOCKER_REGISTRY_MIRROR_USER} -p ${DOCKER_REGISTRY_MIRROR_PASSWORD}
    - >
      (docker pull ${CI_IMAGE} && echo "Using commit image")
      || (docker pull ${CI_BRANCH_NAME} && docker tag ${CI_BRANCH_NAME} ${CI_IMAGE} && echo "Using branch image") 
      || (docker pull ${CI_MAIN_NAME} && docker tag ${CI_MAIN_NAME} ${CI_IMAGE} && echo "Using main image") 
      || echo "Using no image and building from scratch"
    - docker build -f ci.dockerfile -t ${CI_IMAGE} --cache-to type=inline --cache-from ${CI_IMAGE} .
    - docker tag ${CI_IMAGE} ${CI_BRANCH_NAME}
    - docker push ${CI_TAG_NAME} --all-tags
  cache: []

prepare:install_dependencies:
  stage: prepare
  resource_group: install_dependencies
  needs:
    - prepare:ci
  script:
    - make init
  cache:
    <<: *commit-cache
    policy: pull-push

.test-job:
  stage: test
  needs:
    - prepare:install_dependencies
  script:
    - make test-${DATASET}
  artifacts:
    when: always
    paths:
      - datasets/*/experiments
      - tests/*.xml
    expire_in: 180 days
    reports:
      junit: tests/*.xml

test-romance:
  extends: .test-job
  variables:
    DATASET: romance

test-germanic:
  extends: .test-job
  variables:
    DATASET: germanic

test-sinitic:
  extends: .test-job
  variables:
    DATASET: sinitic

test-balto-slavic:
  extends: .test-job
  variables:
    DATASET: balto-slavic

.classify-job:
  stage: get-trees
  needs:
    - prepare:install_dependencies
  script:
    - DATASET_NAME=$(echo ${DATASET} | sed -r 's/([a-z])([A-Z])/\1-\2/g' | tr '[:upper:]' '[:lower:]')
    - make test-tree-distance-${DATASET_NAME}
  artifacts:
    when: always
    paths:
      - datasets/*/experiments
      - tests/*.xml
    expire_in: 180 days
    reports:
      junit: tests/*.xml

classify-romance:
  extends: .classify-job
  variables:
    DATASET: Romance

classify-germanic:
  extends: .classify-job
  variables:
    DATASET: Germanic

classify-sinitic:
  extends: .classify-job
  variables:
    DATASET: Sinitic

classify-balto-slavic:
  extends: .classify-job
  variables:
    DATASET: BaltoSlavic

coverage:
  stage: reports
  needs:
    - prepare:install_dependencies
  script:
    - make coverage
  artifacts:
    when: always
    expire_in: 180 days
    paths:
      - coverage.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
